{"version":3,"sources":["../server/file.js"],"names":["_routes","express","Router","store","multer","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","storage","single","post","res","next","err","console","log","status","json","message","uploadname","filepath","path","join","__dirname","body","sendFile"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAHA,IAAMA,UAAUC,kBAAQC,MAAR,EAAhB;;;AAKA;AACA,IAAMC,QAAQC,iBAAOC,WAAP,CAAmB;AAC7BC,iBAAa,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC5BA,WAAG,IAAH,EAAS,kBAAT;AACH,KAH4B;AAI7BC,cAAU,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACzBA,WAAG,IAAH,EAASE,KAAKC,GAAL,KAAa,GAAb,GAAmBJ,KAAKK,YAAjC;AACH;AAN4B,CAAnB,CAAd;;AASA;AACA,IAAMC,SAAS,sBAAO,EAACC,SAASZ,KAAV,EAAP,EAAyBa,MAAzB,CAAgC,MAAhC,CAAf;;AAEA;AACAhB,QAAQiB,IAAR,CAAa,SAAb,EAAwB,UAACV,GAAD,EAAMW,GAAN,EAAWC,IAAX,EAAoB;AACxCL,WAAOP,GAAP,EAAYW,GAAZ,EAAiB,UAACE,GAAD,EAAS;AACtB;AACA,YAAIA,GAAJ,EAAS;AACLC,oBAAQC,GAAR,CAAYF,GAAZ;AACA,mBAAOF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACD,QAAQ,KAAT,EAAiBE,SAASL,GAA1B,EAArB,CAAP;AACH;AACD;AACAF,YAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACX,cAAcN,IAAIC,IAAJ,CAASK,YAAxB,EAAsCa,YAAYnB,IAAIC,IAAJ,CAASE,QAA3D,EAArB;AACH,KARD;AASH,CAVD;;AAYAV,QAAQiB,IAAR,CAAa,WAAb,EAA0B,UAACV,GAAD,EAAMW,GAAN,EAAWC,IAAX,EAAoB;AAC1C,QAAMQ,WAAWC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,mBAArB,IAA4C,GAA5C,GAAkDvB,IAAIwB,IAAJ,CAASrB,QAA5E;AACAQ,QAAIc,QAAJ,CAAaL,QAAb;AACH,CAHD;;kBAKe3B,O","file":"file.js","sourcesContent":["import express from 'express';\nconst _routes = express.Router();\nimport multer from 'multer';\nimport path from 'path';\nimport db from '../models';\n\n// Initilaizing multer with diskStorge property\nconst store = multer.diskStorage({\n    destination: (req, file, cb) => {\n        cb(null, './public/uploads');\n    },\n    filename: (req, file, cb) => {\n        cb(null, Date.now() + '.' + file.originalname);\n    }\n});\n\n// Initializing multer and saving instance in upload\nconst upload = multer({storage: store}).single('file');\n\n// Creating route for file upload\n_routes.post('/upload', (req, res, next) => {\n    upload(req, res, (err) => {\n        // If there was an error uploading the file, return the error\n        if (err) {\n            console.log(err);\n            return res.status(501).json({status: false,  message: err});\n        }\n        // If there was no error\n        res.status(200).json({originalname: req.file.originalname, uploadname: req.file.filename});\n    });\n});\n\n_routes.post('/download', (req, res, next) => {\n    const filepath = path.join(__dirname, '../public/uploads') + '/' + req.body.filename;\n    res.sendFile(filepath);\n});\n\nexport default _routes;"]}